//
// Forms
// --------------------------------------------------


// Form control feedback states
//
// Apply contextual and semantic states to individual form controls.

.has-icon,
.has-icon--right {
  // Enable absolute positioning
  position: relative;
}
.has-icon {
  // Ensure icons don't overlap text
  .f-control {
    padding-left: $input-height-base;
  }
}
.has-icon--right {
  .f-control {
    padding-right: $input-height-base;
  }
  .f-control-icon {
    left: auto;
    right: 0;
  }
}

// Feedback icon (requires .glyphicon classes)
.f-control-icon {
  position: absolute;
  top: ($line-height-computed + sz(4px)); // Height of the `label` and its margin
  left: 0;
  z-index: 2; // Ensure icon is above input groups
  display: block;
  width: $input-height-base;
  height: $input-height-base;
  line-height: $input-height-base;
  text-align: center;
}

.input-lg + .f-control-icon {
  width: $input-height-lg;
  height: $input-height-lg;
  line-height: $input-height-lg;
}
.input-sm + .f-control-icon {
  width: $input-height-sm;
  height: $input-height-sm;
  line-height: $input-height-sm;
}

// Feedback states
.has-success {
  @include form-control-validation($state-success-txt, $state-success-txt, $state-success-bg);
}
.has-warning {
  @include form-control-validation($state-warning-txt, $state-warning-txt, $state-warning-bg);
}
.has-error {
  @include form-control-validation($state-danger-txt, $state-danger-txt, $state-danger-bg);
}

// Reposition feedback icon if input has visible label above
.has-icon label,
.has-icon--right label {

  //& ~ .f-control-icon {
  //   top: ($line-height-computed + sz(4px)); // Height of the `label` and its margin
  //}
  &.sr-only ~ .f-control-icon {
     top: 0;
  }
}
