// ===========
// Scaffolding
// ===========


// Reset the box-sizing
//
*,
*:before,
*:after {
  @include box-sizing(inherit);
}


// Images

// Responsive images (ensure images don't scale beyond their parents)
// .img-responsive {
//   @include img-responsive();
// }

// Image thumbnails
//
// Heads up! This is mixin-ed into thumbnails.less for `.thumbnail`.
// .img-thumbnail {
//   padding: $thumbnail-padding;
//   line-height: $line-height-base;
//   background-color: $thumbnail-bg;
//   border: 1px solid $thumbnail-border;
//   border-radius: $thumbnail-border-radius;
//   @include transition(all .2s ease-in-out);

//   // Keep them at most 100% wide
//   @include img-responsive(inline-block);
// }


// Only display content to screen readers
// See: http://a11yproject.com/posts/how-to-hide-content/
//
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0,0,0,0);
  border: 0;
}

// Use in conjunction with .sr-only to only display content when it's focused.
// Useful for "Skip to main content" links; see http://www.w3.org/TR/2013/NOTE-WCAG20-TECHS-20130905/G1
// Credit: HTML5 Boilerplate
//
.sr-only-focusable {
  &:active,
  &:focus {
    position: static;
    width: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    clip: auto;
  }
}


// Creates css for social media links based on $colors map in vars.scss
//
@each $name in map-keys(map-get($colors, social)) {
  .link-#{$name},
  %link-#{$name} {
    background-color: map-fetch($colors, social $name);
    color: #fff;
    text-align: center;

    &:hover,
    &:focus {
      background-color: darken(map-fetch($colors, social $name), 7%);
    }
  }
}
