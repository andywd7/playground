/*==========*\
   #LISTS
 -----------
 * Elements
 * Classes
\*==========*/


/**
 * Unordered and Ordered lists
 */
ul,
ol {
  margin: 0 0 $line-height-computed;

  ul,
  ol {
    margin-bottom: 0;
  }

  + * {
    margin-bottom: ($line-height-computed / 2);
  }
}


/** 
 * Description Lists
 */
dl {
  margin-top: 0; /* Remove browser default */
  margin-bottom: $line-height-computed;
}

dt,
dd {
  line-height: $line-height-base;
}

dt {
  font-weight: bold;
}

dd {
  margin-left: 0; /* Undo browser default */
}



/** 
 * List options
----------------------------------------------------------------------
 * Unstyled keeps list items block level, just removes default browser
 * padding and list-style
 */
.list-unstyled {
  list-style: none;
  padding-left: 0;
}


/** 
 * Inline turns list items into inline-block
 */
.list-inline {
  @extend .list-unstyled;
  @include cf();
  margin-left: -5px;

  > li {
    float: left;
    padding-left: 5px;
    padding-right: 5px;
  }
}


.list--rows {
  > li {
    border-bottom: 1px solid $border-base;

    .nav--rows > li {
      border-bottom: 0;
      border-top: 1px solid $border-base;
    }
  }
}

.list--cols {
  > li {
    border-left: 1px solid $border-base;

    &:first-child {
      border-left: 0;
    }
  }
}



/** 
 * Horizontal description lists
--------------------------------------------------------------------------------
 * Defaults to being stacked without any of the below styles applied, until the
 * grid breakpoint is reached (default of ~768px).
 */
.dl-horizontal {
  dd {
    @include cf(); /* Clear the floated `dt` if an empty `dd` is present */
  }

  @include mq($from: navbar) {
    dt {
      @include txt-overflow();
      clear: left;
      float: left;
      text-align: right;
      width: ($dl-horizontal-offset - 20);
    }

    dd {
      margin-left: $dl-horizontal-offset;
    }
  }
}



/**
 * Ordered counter list-steps
 */
.list-steps {
  @extend .list-unstyled;

  > li {
    color: color(grey, light);
    counter-increment: list-steps;
    display: inline-block;
    font-weight: 700;
    margin-left: ($line-height-computed / 2);
    padding-left: 0;
    text-transform: uppercase;

    &:before {
      content: counter(list-steps);
      color: color(grey, light);
      display: inline-block;
      margin-right: sz(5px);
      text-align: center;
    }

    &:first-child {
      margin-left: 0;
    }

    &.is-current {
      color: $brand-primary;

      &:before {
        color: $brand-primary;
      }
    }
  }

  @include mq($from: mobile) {
    > li {
      margin-left: $line-height-computed;

      &:before {
        border: 2px solid color(grey, light);
        border-radius: 100px;

        width: sz(24px);
      }

      &.is-current {

        &:before {
          background-color: $brand-primary;
          border-color: $brand-primary;
          box-shadow: inset 0 0 0 1px #fff;
          color: #fff;
        }
      }
    }
  }
}


/**
 * Pagination
 */
.pagination {
  @extend .list-inline;
}
.pagination > .is-current a {
  @extend .btn--primary;
}


/**
 * Collapsable List
 */
.list-collapsable {
  @include cf();
  padding: sz(3px 0);
  position: relative;
}


.list-collapsable_header {
  font-size: sz(12px);
  font-weight: normal;
  margin: 0;
  position: relative;

  a {
    display: block;

    &:before {
      margin-right: sz(2px);
    }
  }

  &.is-active {
    a {
      color: $link-hover-color;

      &:before {
        @extend .i-triangle-up;
      }
    }

    + .list-collapsable_list {
      background-color: #fff;
      box-shadow: 0 2px 2px rgba(0, 0, 0, .15);
      left: 0;
      line-height: sz(20px);
      padding: sz(4px 5px 4px 10px);
      top: sz(18px);
      width: 100%;
      z-index: 10;
    }
  }

  @include mq($from: mobile) {
    left: -9999px;
    position: absolute;
  }
}


.list-collapsable_list {
  left: -999em;
  list-style: none;
  margin: 0;
  padding: 0;
  position: absolute;
    
  @include mq($from: mobile) {
    position: static;

    .is-active & {
      box-shadow: none;
    }
  }
}
