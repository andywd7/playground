// ====================
// DOCS
// ====================
$not-ie: true;

@import '../scss/tools/_mixins.scss';
@import '../scss/tools/_mx.mq.scss'; // Includes breakpoint vars & other mq options.
@import '../scss/tools/_vars.scss';


// body
.body {
  border: 15px solid color(grey, lighter);
  margin: $padding-base-vertical $padding-base-horizontal;
  padding: $padding-base-vertical $padding-base-horizontal;
}


//
// Font Map for displaying correct font in docs
//
$fonts: (
    heading: $headings-font-family,
    body:    $font-family-base
) !default;

// Display font stack names
@each $font, $val in $fonts {
  .docs-#{$font} {
    font-family: $val;
    &:after {
      content: "#{$val}";
      padding-left: 5px;
    }
  }
}


//
// Display color hex code and var function in docs
//
@each $key, $color in $colors {
  @each $tone in map-keys(map-get($colors, $key)) {
    .sg-#{$key}-#{$tone} {
      background-color: color($key, $tone);
      &:before {
        content: "#{color($key, $tone)}";
      }
      &:after {
        @if $tone == base {
          content: "color(#{$key})";
        } @else {
          content: "color(#{$key}, #{$tone})";
        }
      }
    }
  }
}

.sg-black {
  background-color: #000;

  &:before {
    content: "black";
  }

  &:after {
    content: "#000";
  }
}

.sg-palette {
  float: left;
  list-style: none;
  margin-bottom: 0;
  margin-right: 20px;
  margin-top: 0;
  padding-left: 0; // Override default ul/ol

  > li {
    border: 1px solid #ccc;
    box-sizing: border-box;
    float: left;
    margin: 0 10px 10px 0;
    padding: 5px;
    width: auto;
  }
    
  .sg-color {
    color: #fff;
    display: block;
    height: 50px;
    line-height: 100px;
    margin-bottom: 40px;
    position: relative;
    text-align: center;
    width: 178px;

    &:before,
    &:after {
      color: #000;
      font-family: monospace, serif; 
      font-size: 13px;
      left: 0;
      position: absolute;
      right: 0;
    }

    &:before {
      bottom: -62px;
    }

    &:after {
      bottom: -82px;
    }
  }
}


//
// Display color hex code and var function in docs
//
@each $key, $color in $colors {
  .chart-#{$key} {
    .sg-color,
    .sg-color h4 {
      color: color($key);
    }
  }
}

.chart-white .sg-color,
.chart-white .sg-color h4 {
  color: #fff;
}
.chart-black .sg-color,
.chart-black .sg-color h4 {
  color: #000;
}

[class*="chart-"] {
  @include cf();
  float: none;

  .sg-color {
    height: auto;
    line-height: 1.5;
    margin-bottom: 0;
    padding: sz(5px);
    text-align: left;

    &:before,
    &:after {
      content: "";
      position: static;
    }
  }
}


//
// Demo Grid
//
.demo [class*="w-"] {
  background: #ccc;
  border-right: 1px solid #aaa;
  border-left: 1px solid #aaa;
  padding-top: sz(10px);
  padding-bottom: sz(10px);
}


//
// Responsive
//
.docs-rwd-helpers {
  span {
    display: block;
    font-size: 14px;
    font-weight: 700;
    line-height: 1.1;
    margin-bottom: 20px;
    padding: 15px 10px;
    text-align: center;
  }

  &.visible-on [class*="w-"] .hidden-xs,
  &.visible-on [class*="w-"] .hidden-sm,
  &.visible-on [class*="w-"] .hidden-md,
  &.visible-on [class*="w-"] .hidden-lg,
  &.hidden-on [class*="w-"] .hidden-xs,
  &.hidden-on [class*="w-"] .hidden-sm,
  &.hidden-on [class*="w-"] .hidden-md,
  &.hidden-on [class*="w-"] .hidden-lg {
    border: 1px solid #ddd;
    color: #999;
  }

  &.visible-on [class*="w-"] .visible-xs-block,
  &.visible-on [class*="w-"] .visible-sm-block,
  &.visible-on [class*="w-"] .visible-md-block,
  &.visible-on [class*="w-"] .visible-lg-block,
  &.hidden-on [class*="w-"] .visible-xs-block,
  &.hidden-on [class*="w-"] .visible-sm-block,
  &.hidden-on [class*="w-"] .visible-md-block,
  &.hidden-on [class*="w-"] .visible-lg-block {
    background-color: #dff0d8;
    border: 1px solid #d6e9c6;
    color: #468847;
  }
}


.responsive-utilities td.is-visible {
  background-color: #dff0d8 !important;
  color: #468847;
}
